#!/usr/bin/env bash

#   Copyright 2018-2020 Docker Inc.

#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at

#       http://www.apache.org/licenses/LICENSE-2.0

#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

source /.helpers

set -e

apt-get update && apt-get install -y --no-install-recommends \
    curl \
    devscripts \
    equivs \
    git \
    lsb-release \
 && mk-build-deps -t "apt-get -o Debug::pkgProblemResolver=yes --no-install-recommends -y" -i debian/control \
 && apt-get clean \
 && rm -rf /var/lib/apt/lists/*

VERSION="$(git -C "${GO_SRC_PATH}" describe --tags | sed 's/^v//')"
# Check if we're on a tagged version, change VERSION to dev build if not
if ! git -C "${GO_SRC_PATH}" describe --exact-match HEAD >/dev/null 2>&1; then
    git_date=$(date --date "@$(git -C "${GO_SRC_PATH}" log -1 --pretty='%at')" +'%Y%m%d.%H%M%S')
    git_sha=$(git -C "${GO_SRC_PATH}" log -1 --pretty='%h')
    # export VERSION here so it gets picked up by debian/rules
    VERSION="${git_date}~${git_sha}"
    # prepend a `0` so it'll never be greater than non-dev versions
    cat > debian/nightly.changelog <<-EOF
$(control_field Package) (0.${VERSION}-1) development; urgency=medium

  * Release for ${git_sha}

 -- $(control_field Maintainer)  $(date --rfc-2822)

EOF
    cat debian/changelog >> debian/nightly.changelog
    cat debian/nightly.changelog
    mv debian/nightly.changelog debian/changelog
fi
REF=$(git -C "${GO_SRC_PATH}" rev-parse HEAD)
export REF
export VERSION
(set -x; dpkg-buildpackage -uc -us)
DIST_ID=$(. /etc/os-release; echo "$ID")
DIST_VERSION=$(lsb_release -sc)
ARCH=$(dpkg --print-architecture)
OUT_DIR="/out/${DIST_ID}/${DIST_VERSION}/${ARCH}/"
mkdir -p "${OUT_DIR}"
mv -v ../*.deb "${OUT_DIR}"

# Only create an archive if env variable is specified
if [[ -n "${CREATE_ARCHIVE}" ]]; then
tar -C /out -cvzf "/archive/${DIST_ID}-${DIST_VERSION}-${ARCH}.tar.gz" "${DIST_ID}/${DIST_VERSION}/${ARCH}"
fi
