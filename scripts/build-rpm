#!/usr/bin/env sh

#   Copyright 2018-2022 Docker Inc.

#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at

#       http://www.apache.org/licenses/LICENSE-2.0

#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

# shellcheck disable=SC1090
. "$(dirname "$0")/.rpm-helpers"

SPEC_FILE=SPECS/containerd.spec

set -e

# copied from get.docker.com
get_distribution() {
	lsb_dist=""
	# Every system that we officially support has /etc/os-release
	if [ -r /etc/os-release ]; then
		lsb_dist="$(. /etc/os-release && echo "$ID")"
	fi
	# Returning an empty string here should be alright since the
	# case statements don't act unless you provide an actual value
	echo "$lsb_dist"
}

VERSION="$(git --git-dir "${GO_SRC_PATH}/.git" describe --tags | sed 's/^v//')"
RPM_VER_BITS=$(gen_rpm_ver_bits "${VERSION}")
RPM_VERSION=$(echo "${RPM_VER_BITS}" | cut -f1 -d' ')
RPM_RELEASE_VERSION=$(echo "${RPM_VER_BITS}" | cut -f2 -d' ')

# Check if we're on a tagged version, change VERSION to dev build if not
if ! git --git-dir "${GO_SRC_PATH}/.git" describe --exact-match HEAD > /dev/null 2>&1; then
	git_date=$(date --date "@$(git --git-dir "${GO_SRC_PATH}/.git" log -1 --pretty='%at')" +'%Y%m%d.%H%M%S')
	git_sha=$(git --git-dir "${GO_SRC_PATH}/.git" log -1 --pretty='%h')
	VERSION="0.${git_date}~${git_sha}"
	RPM_RELEASE_VERSION=0
	RPM_VERSION="$VERSION"
fi
REF=$(git --git-dir "${GO_SRC_PATH}/.git" rev-parse HEAD)

export REF
export RPM_RELEASE_VERSION
export RPM_VERSION
export VERSION

install_build_deps "${SPEC_FILE}"

DIST_ID="$(. /etc/os-release; echo "${ID}")"
DIST_VERSION="$(. /etc/os-release; echo "${VERSION_ID}" | cut -d'.' -f1)"
ARCH="$(uname -m)"
DEST_DIR="/build/${DIST_ID}/${DIST_VERSION}/${ARCH}/"
(
	set -x
	# Set 'runc_nokmem' build tag for RHEL/CentOS 7.x
	if [ "$DIST_ID" = "centos" ] || [ "$DIST_ID" = "rhel" ]; then
		case "$DIST_VERSION" in
		"7"*)
			export RUNC_NOKMEM="nokmem"
			;;
		esac
	fi
	rpmbuild -ba "${SPEC_FILE}"
	mkdir -p "${DEST_DIR}"
	mv -v RPMS/*/*.rpm "${DEST_DIR}"
	mv -v SRPMS/*.rpm "${DEST_DIR}"
)

# Only create an archive if env variable is specified
if [ -n "${CREATE_ARCHIVE}" ]; then
	tar -C /build -cvzf "/archive/${DIST_ID}-${DIST_VERSION}-${ARCH}.tar.gz" "${DIST_ID}/${DIST_VERSION}/${ARCH}"
fi
